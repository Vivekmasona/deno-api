<!doctype html>
<html>
<head>
<meta charset="utf-8"/>
<title>ðŸŽ¶ FM Live Listener</title>
<style>
body{background:#000;color:#0f0;font-family:sans-serif;text-align:center;padding:30px}
h2{color:#0f0}
audio{margin-top:20px;width:90%}
#status{margin-top:10px}
</style>
</head>
<body>

<h2>ðŸ”Š Live FM Radio</h2>
<div id="status">Connecting...</div>
<audio id="player" controls autoplay></audio>

<script>
const WS = "wss://vfy-call.deno.dev/ws";
const socket = new WebSocket(WS);
const player = document.getElementById("player");
const statusEl = document.getElementById("status");
let pc = null;

function setStatus(msg){ statusEl.textContent = msg; }

socket.onopen = () => {
  socket.send(JSON.stringify({type:"register", role:"listener"}));
  setStatus("Waiting for broadcast...");
};

socket.onmessage = async e => {
  const msg = JSON.parse(e.data);

  if(msg.type === "offer"){
    setStatus("ðŸ”— Connecting to broadcaster...");
    pc = new RTCPeerConnection({iceServers:[{urls:"stun:stun.l.google.com:19302"}]});
    pc.ontrack = ev => {
      player.srcObject = ev.streams[0];
      setStatus("ðŸŽ§ Live now!");
    };
    pc.onicecandidate = e=>{
      if(e.candidate) socket.send(JSON.stringify({type:"candidate",target:msg.from,payload:e.candidate}));
    };
    await pc.setRemoteDescription(msg.payload);
    const answer = await pc.createAnswer();
    await pc.setLocalDescription(answer);
    socket.send(JSON.stringify({type:"answer",target:msg.from,payload:pc.localDescription}));
  }

  if(msg.type === "candidate" && pc){
    try{ await pc.addIceCandidate(msg.payload); }catch{}
  }
};
</script>
</body>
</html>
